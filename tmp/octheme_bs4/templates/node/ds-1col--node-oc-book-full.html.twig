{#
/**
* @file
* Theme override to display a node.
*
* Available variables:
* - node: The node entity with limited access to object properties and methods.
Only "getter" methods (method names starting with "get", "has", or "is")
and a few common methods such as "id" and "label" are available. Calling
other methods (such as node.delete) will result in an exception.
* - label: The title of the node.
* - content: All node items. Use {{ content }} to print them all,
*   or print a subset such as {{ content.field_example }}. Use
*   {{ content|without('field_example') }} to temporarily suppress the printing
*   of a given child element.
* - author_picture: The node author user entity, rendered using the "compact"
*   view mode.
* - metadata: Metadata for this node.
* - date: Themed creation date field.
* - author_name: Themed author name field.
* - url: Direct URL of the current node.
* - display_submitted: Whether submission information should be displayed.
* - attributes: HTML attributes for the containing element.
*   The attributes.class element may contain one or more of the following
*   classes:
*   - node: The current template type (also known as a "theming hook").
*   - node--type-[type]: The current node type. For example, if the node is an
*     "Article" it would result in "node--type-article". Note that the machine
*     name will often be in a short form of the human readable label.
*   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
*     teaser would result in: "node--view-mode-teaser", and
*     full: "node--view-mode-full".
*   The following are controlled through the node publishing options.
*   - node--promoted: Appears on nodes promoted to the front page.
*   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
*     teaser listings.
*   - node--unpublished: Appears on unpublished nodes visible only to site
*     admins.
* - title_attributes: Same as attributes, except applied to the main title
*   tag that appears in the template.
* - content_attributes: Same as attributes, except applied to the main
*   content tag that appears in the template.
* - author_attributes: Same as attributes, except applied to the author of
*   the node tag that appears in the template.
* - title_prefix: Additional output populated by modules, intended to be
*   displayed in front of the main title tag that appears in the template.
* - title_suffix: Additional output populated by modules, intended to be
*   displayed after the main title tag that appears in the template.
* - view_mode: View mode; for example, "teaser" or "full".
* - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
* - page: Flag for the full page state. Will be true if view_mode is 'full'.
* - readmore: Flag for more state. Will be true if the teaser content of the
*   node cannot hold the main body content.
* - logged_in: Flag for authenticated user status. Will be true when the
*   current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
*   is an administrator.
*
* @ingroup templates
*
* @see template_preprocess_node()
*
* @todo Remove the id attribute (or make it a class), because if that gets
*   rendered twice on a page this is invalid CSS for example: two lists
*   in different view modes.
*/
#}
{%
set classes = [
node.bundle|clean_class,
node.isPromoted() ? 'is-promoted',
node.isSticky() ? 'is-sticky',
not node.isPublished() ? 'is-unpublished',
view_mode ? view_mode|clean_class,
'clearfix',
]
%}




{% if 1 %}
    {#{% if page  %} Not sure what the D8 equivalent is for page #}

    <div id="node-{{ node.id }}">
        <h2 class="oc_inject oc_auth_title oc_title">
           BY {{ auth }}
        </h2>
        {% if body  %}



            <div class="oc_summary oc_text">
                <h2 class="oc_inject oc_title">
                  BOOK DESCRIPTION
                </h2>

                <div class="oc_inject oc_col_width clearfix"{{ content_attributes }}>
{{ body }}
                </div>
            </div>
        {% endif %}
        <div class="oc_item clearfix"{{ attributes }}>
            {{ title_prefix }}
            <h2 class="oc_inject oc_title">
                {{ "BOOK SUMMARY" }}
            </h2>




            <div class="content oc_inject clearfix"{{ content_attributes }}>

                <div class="oc_right" >
                    {{ field_oc_book_image  }}
                </div>
                <div class="oc_right" >
                    {{ field_oc_external_links }}
                </div>
                <div class="oc_right" >
                    {{ field_oc_internal_links }}
                </div>
                <div class="oc_col_width">
                    {{ node.body.summary | raw }}
                    {% if content.book_navigation %}

                        This book's summary has chapters. Normally these will match the chapters of the book:<br>

                        {% if book == "0"  %}
                            <a href=\"/admin/structure/book/"{{ node.id }}">Sort</a>|"
                        {% endif %}
                        {#The line below is apparently correct according to prepopulate but triggers an error. needs to be fixed. ####}
                        {#<a href="/node/add/oc_doc?edit[book][bid]={{ book_navigation['#book_link']['bid'] }}">Add childpage</a>#}

                        {#{% if is_admin  %}#}
                        {# PHP:print "(<a href=\"/admin/content/book/".$nid#}
                        {#."?destination=admin/content/book\">Sort</a>|"#}
                        {#."<a href=\"/node/add/formation-doc?oa_section_ref=".$oa_section_ref['und'][0]['target_id']#}
                        {#."&edit[book][bid]=".$nid#}
                        {#."\">Add childpage</a>)";#}
                        {#{% endif %}#}
                        {{ content.book_navigation }}
                    {% endif %}
                </div>

            </div>



            <div class="content oc_inject clearfix"{{ content_attributes }}>
                <h2 class=" oc_title">
                    {{ "METADATA" }}
                </h2>
                <div class="oc_floatleft">

                     Posted: {{ uid}} :  {{ content.created }}
                                  </br>

                  Modified: {{ modified }}
                </div>
                <div class="oc_floatleft">
                    {{ content.field_oc_topic }}
                </div>
                <div class="oc_floatleft">
                    {{ content.field_oc_level }}
                </div>

            </div>
            <div>
                <h2 class="oc_inject oc_title">
                    BIBLIOGRAPHIC REFERENCE
                </h2>
                <p class="oc_inject oc_text ">
                    {{ auth }}.
                    <span class="oc_book_title">
    {{ title[0]['#context']['value']  }},
  </span>
                    {{ field_oc_place_published[0]['#context']['value'] }}:{{ field_oc_publisher[0]['#context']['value']  }}, {{ field_oc_year[0]['#context']['value']  }}

                </p>
            </div>
            <div>
                <h2 class="oc_inject oc_title">
                    ISBN
                </h2>
                <p class="oc_inject oc_text ">
                    {{ field_oc_isbn[0]['#context']['value'] }}
                </p>
            </div>
            <div class="content oc_comment clearfix"{{ content_attributes }}>
                {{ content.comments }}
            </div>
        </div>
    </div>
{% else %}
    <!-- This is for teasers, ie a non page render -->
    <div id="node-{{ node.id }}">

        <div class="{{ classes }}  oc_panel_left oc_title clearfix"{{ attributes }}>
            {# PHP: print "<a class=\" oc_panel_left\" href=\"".$node_url."\">".render($title)."</a>"; #}
            {% if is_admin  %}
                {# //needs to be fixed: print "<a href=\"/admin/content/book/".$nid."?destination=admin/content/book\">(Sort)</a>"; #}
            {% endif %}
            {% if body  %}
                <div class="oc_summary">
                    <div class=" oc_teaser_text oc_panel_left field-item clearfix"{{ content_attributes }}>
                        {{ body }} {#//['und'][0]['value'];
#}
                    </div>
                </div>
            {% endif %}

        </div>
    </div>
{% endif %}